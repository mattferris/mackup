#!/bin/sh
#
# rsync backup script for mackup, see mackup(8)
#
exec 2>&1

source="$(dirname $1)/$(basename $1)"
target="./"
dest=$target
opts="-av"

if [ ! -z "$REMOTE_HOST" ]; then
    source="$REMOTE_HOST:$source"
fi

if [ ! -z "$RSYNC_OPTS" ]; then
    opts="$RSYNC_OPTS"
fi

if [ ! -z "$RSYNC_DELETE" ]; then
    opts="$opts --delete"
fi

if [ ! -z "$RSYNC_EXCLUDE_FROM" ]; then
    opts="$opts --exclude-from=$RSYNC_EXCLUDE_FROM"
fi

if [ ! -z "$INCREMENTAL_MONTHLY" ]; then
    curmonth=$(date +'%b' | awk '{print tolower($1)}')
    lastmonth=$(date -d '1 month ago' +'%b' | awk '{print tolower($1)}')
    echo "attempting monthly incremental backup: last=$lastmonth cur=$curmonth"
    lasttarget="$(realpath $target)/$lastmonth/$(basename $source)"
    dest="$target/$curmonth/$(basename $source)"
    if [ -d "$lasttarget" ]; then
        echo "found last month's backup: $lasttarget"
        opts="$opts --link-dest=$(dirname $lasttarget)/"
    else
        echo "backup $lasttarget doesn't exist, starting fresh"
    fi

    if [ ! -z "$RSYNC_INCREMENTAL_NUM" ]; then
        delmonth=$(date -d "$RSYNC_INCREMENTAL_NUM" +'%b' | awk '{print tolower($1)}')
        if [ -d "$target/$delmonth" ]; then
            echo "deleting old monthly backup $target/$delmonth"
            rm -r "$target/$delmonth"
        fi
    fi
elif [ ! -z "$INCREMENTAL_DAILY" ]; then
    curday=$(date +'%a' | awk '{print tolower($1)}')
    lastday=$(date -d 'yesterday' +'%a' | awk '{print tolower($1)}')
    echo "attempting daily incremental backup: last=$lastday cur=$curday"
    lasttarget="$(realpath $target)/$lastday/$(basename $source)"
    dest="$target/$curday"
    if [ -d "$lasttarget" ]; then
        echo "found yesterday's backup: $lasttarget"
        opts="$opts --link-dest=$(dirname $lasttarget)/"
    else
        echo "backup $lasttarget doesn't exist, starting fresh"
    fi
fi

if [ ! -d "$dest" ]; then
    mkdir -p "$dest" > /dev/null 2>&1
    if [ ! $? = 0 ]; then
        echo "error: failed to created destination directory '$dest'"
        exit 1
    fi
fi

echo "rsync $opts $source $dest"

exec rsync $opts $source $dest
